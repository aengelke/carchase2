# Filename: patterns.txt       #
# Parser: PatternsParser       #
# Author: Alexis Engelke 2014  #
################################
# 
# pt SITUATION
# --cond#XY#{=,<,>,!}#XY
# ...
# --msg#...
# ++
#
# Variables start with a *.
#
# Nice to have: "Du fährst auf die Kreuzung zu und biegst links ab..."
#
pt p1, y
--cond#*DISTANCE#=#-200
--cond#*DIRECTION#=#1
--cond#*ISJUNCTION#=#1
# Ideally, there would be a <hes> at the end...
--msg#T1#F1#R3#Sent1=Das Auto fährt auf *FLEX1JUNCTIONSTREET zu und
--msg#T2#F1#R3#Sent2=Das Auto fährt auf die Kreuzung zu und
--msg#T3#F1#R3#Sent3=Das Auto fährt auf die Kreuzung mit *FLEX2JUNCTIONSTREET zu und
--msg#T1#R1#R3#Cont1=und erreicht die Kreuzung und
--msg#T2#R1#R3#Cont2=und fährt auf die Kreuzung zu und
--msg#T2#R1#R3#Cont3=und fährt auf *FLEX1JUNCTIONSTREET zu und
--msg#T3#R1#R3#Cont4=und fährt auf die Kreuzung mit *FLEX2JUNCTIONSTREET zu und
++
pt p1, y
--cond#*DISTANCE#=#200
--cond#*DIRECTION#=#-1
--cond#*ISJUNCTION#=#1
# Ideally, there would be a <hes> at the end...
--msg#T1#F1#R3#Sent1=Das Auto fährt auf *FLEX1JUNCTIONSTREET zu und
--msg#T2#F1#R3#Sent2=Das Auto fährt auf die Kreuzung zu und
--msg#T3#F1#R3#Sent3=Das Auto fährt auf die Kreuzung mit *FLEX2JUNCTIONSTREET zu und
--msg#T1#R1#R3#Cont1=und erreicht die Kreuzung und
--msg#T2#R1#R3#Cont2=und fährt auf die Kreuzung zu und
--msg#T3#R1#R3#Cont3=und fährt auf die Kreuzung mit *FLEX2JUNCTIONSTREET zu und
#<hes> 
#äeäeäeäeäeäeäeäeä?
++
pt p1, y
--cond#*DISTANCE#=#150
--cond#*DIRECTION#=#-1
--cond#*ISJUNCTION#=#2
# Ideally, there would be a <hes> at the end...
--msg#T3#F1#R4#Sent2=Das Auto fährt auf *FLEX1JUNCTIONSTREET zu und biegt
# <hes>
# äeäeäeäeäeäeäeäeäeä?
--msg#T2#F1#R4#Sent3=Das Auto fährt auf *FLEX1JUNCTIONSTREET zu und biegt
--msg#T1#F1#R4#Sent4=Es erreicht *FLEX1JUNCTIONSTREET und biegt
--msg#T1#R1#R4#Cont1=und erreicht die Kreuzung und biegt
--msg#T2#R1#R4#Cont2=und fährt auf *FLEX1JUNCTIONSTREET zu und biegt
++
pt p1, y
--cond#*DISTANCE#=#-170
--cond#*DIRECTION#=#1
--cond#*ISJUNCTION#=#2
# Ideally, there would be a <hes> at the end...
--msg#T3#F1#R4#Sent2=Das Auto fährt nun langsam auf *FLEX1JUNCTIONSTREET zu und biegt <hes>
--msg#T2#F1#R4#Sent3=Das Auto fährt auf *FLEX1JUNCTIONSTREET zu und biegt
--msg#T1#F1#R4#Sent4=Es erreicht *FLEX1JUNCTIONSTREET und biegt
--msg#T1#R1#R4#Cont1=und erreicht die Kreuzung und biegt
--msg#T2#R1#R4#Cont2=und fährt auf *FLEX1JUNCTIONSTREET zu und biegt
++
# Kreuzung: 
pt p1
--cond#*DISTANCE#=#5
--cond#*DIRECTION#=#1
--cond#*WASJUNCTION#=#1
--cond#*PREVSTREET#!#*STREET
--msg#T1#R3#F1#Cont1=biegt *LEFTRIGHT ab.
#--msg#T2#R3#F1#Cont1=biegt in *FLEX1STREET.
++
pt p1
--cond#*DISTANCE#=#-5
--cond#*DIRECTION#=#-1
--cond#*WASJUNCTION#=#1
--cond#*PREVSTREET#!#*STREET
--msg#T1#R3#F1#Cont1=biegt *LEFTRIGHT ab.
#--msg#T2#R3#F1#Cont1=biegt in *FLEX1STREET.
++
pt p1
--cond#*DISTANCE#=#5
--cond#*DIRECTION#=#1
--cond#*WASJUNCTION#=#1
--cond#*PREVSTREET#=#*STREET
--msg#T2#R3#F1#Cont1=fährt geradeaus weiter.
++
pt p1
--cond#*DISTANCE#=#-5
--cond#*DIRECTION#=#-1
--cond#*WASJUNCTION#>#0
--cond#*PREVSTREET#=#*STREET
--msg#T2#R3#F1#Cont1=fährt geradeaus weiter.
++
# T-Kreuzung
pt p1
--cond#*DISTANCE#=#5
--cond#*DIRECTION#=#1
--cond#*BIDIRECTIONAL#=#0
--cond#*WASJUNCTION#=#2
--cond#*PREVSTREET#!#*STREET
--msg#T1#R4#F1#Cont1=hinein.
++
pt p1
--cond#*DISTANCE#=#5
--cond#*DIRECTION#=#1
--cond#*WASJUNCTION#=#2
--cond#*BIDIRECTIONAL#=#1
--cond#*PREVSTREET#!#*STREET
--msg#T1#R4#F1#Cont1=*LEFTRIGHT hinein.
#--msg#T3#R4#F1#Cont1=in *FLEX1STREET.
++
pt p1
--cond#*DISTANCE#=#-5
--cond#*DIRECTION#=#-1
--cond#*WASJUNCTION#=#2
--cond#*BIDIRECTIONAL#=#1
--cond#*PREVSTREET#!#*STREET
--msg#T1#R4#F1#Cont1=*LEFTRIGHT hinein.
#--msg#T3#R4#F1#Cont1=in *FLEX1STREET.
++
# Nach Strassenwechsel, wenn keine Kreuzung:
pt p1
--cond#*DISTANCE#=#5
--cond#*DIRECTION#=#1
--cond#*PREVSTREET#!#*STREET
--msg#T2#F1#F1#Sent1=Das Auto fährt in *FLEX1STREET.
--msg#T3#F1#F1#Sent2=Das Auto fährt aus *FLEX2PREVSTREET in *FLEX1STREET.
--msg#T3#R1#F1#Cont1=und fährt weiter in *FLEX1STREET.
--msg#T2#R1#F1#Cont2=und fährt in *FLEX1STREET.
--msg#T1#R1#F1#Cont3=und in *FLEX1STREET.
--msg#T1#R2#F1#Cont4=in *FLEX1STREET.
--msg#T2#R2#F1#Cont5=weiter in *FLEX1STREET.
--msg#T1#R2#F1#Cont6=fährt in *FLEX1STREET.
--msg#T2#R3#F1#Cont7=und fährt in *FLEX1STREET.
++
pt p1
--cond#*DISTANCE#=#-5
--cond#*DIRECTION#=#-1
--cond#*PREVSTREET#!#*STREET
--msg#T2#F1#F1#Sent1=Das Auto fährt in *FLEX1STREET.
--msg#T3#F1#F1#Sent2=Das Auto fährt aus *FLEX2PREVSTREET in *FLEX1STREET.
--msg#T3#R1#F1#Cont1=und fährt weiter in *FLEX1STREET.
--msg#T3#R1#F1#Cont1=und in *FLEX1STREET.
--msg#T2#R1#F1#Cont2=und fährt in *FLEX1STREET.
--msg#T1#R1#F1#Cont3=und in *FLEX1STREET.
--msg#T1#R2#F1#Cont4=in *FLEX1STREET.
--msg#T2#R2#F1#Cont5=weiter in *FLEX1STREET.
--msg#T1#R2#F1#Cont6=fährt in *FLEX1STREET.
--msg#T2#R3#F1#Cont7=und fährt in *FLEX1STREET.
++
# Geschwindigkeit: Theoretisch einfach, praktisch stoerend
#pt p1, y
#--cond#*DISTANCE#>#0
#--cond#*SPEED#>#*PREVSPEED
#--msg#T2#F1#F1#Sent1=Das Auto wird schneller.
#--msg#T3#R1#F1#Cont1=und beschleunigt.
#--msg#T2#R1#F1#Cont2=und wird schneller.
#++
#pt p1, y
#--cond#*DISTANCE#>#0
#--cond#*SPEED#<#*PREVSPEED
#--msg#T2#F1#F1#Sent1=Das Auto wird langsamer.
#--msg#T2#R1#F1#Cont2=und wird langsamer.
#++
#
#
flex1 die
flex2 der
#
street DorfstrasseR, Dorfstraße, die Dorfstraße, der Dorfstraße
street Dorfstrasse, Dorfstraße, die Dorfstraße, der Dorfstraße
street Kreisel, %, den %, dem %
street Breite Strasse, Breite Straße, die Breite Straße, der Breiten Straße
street Bahnhofstrasse, Baahnhoofstraße, die Baahnhoofstraße, der Baahnhoofstraße